name: ci
on:
  push:
    branches:
      - main
permissions:
  contents: write

env:
  BASH_CREATE_PEM: ${{ secrets.BASH_CREATE_PEM }}
  DATABASE_APP: ${{ secrets.DATABASE_APP }}
  DATABASE_DEV: ${{ secrets.DATABASE_DEV }}
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PASSWORD_APP: ${{ secrets.DATABASE_PASSWORD_APP }}
  DATABASE_PASSWORD_DEV: ${{ secrets.DATABASE_PASSWORD_DEV }}
  DATABASE_PASSWORD_PROD: ${{ secrets.DATABASE_PASSWORD_PROD }}
  DATABASE_PASSWORD_HOMO: ${{ secrets.DATABASE_PASSWORD_HOMO }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_PROD: ${{ secrets.DATABASE_PROD }}
  FINGER_PRINT_PAGARME: ${{ secrets.FINGER_PRINT_PAGARME }}
  GRAFANA_PASS: ${{ secrets.GRAFANA_PASS }}
  GRAFANA_USER: ${{ secrets.GRAFANA_USER }}
  MELHOR_ENVIO_LOGIN: ${{ secrets.MELHOR_ENVIO_LOGIN }}
  MELHOR_ENVIO_PASS: ${{ secrets.MELHOR_ENVIO_PASS }}
  PAGARME_LOGIN_HOMO: ${{ secrets.PAGARME_LOGIN_HOMO }}
  PAGARME_LOGIN_PROD: ${{ secrets.PAGARME_LOGIN_PROD }}
  PAGARME_PASS_HOMO: ${{ secrets.PAGARME_PASS_HOMO }}
  PAGARME_PASS_PROD: ${{ secrets.PAGARME_PASS_PROD }}
  PASSWORD: ${{ secrets.PASSWORD }}
  UDEMY_LOGIN: ${{ secrets.UDEMY_LOGIN }}
  UDEMY_PASS: ${{ secrets.UDEMY_PASS }}
  USERNAME_APP: ${{ secrets.USERNAME_APP }}
  USERNAME_DEV: ${{ secrets.USERNAME_DEV }}
  USERNAME_PROD: ${{ secrets.USERNAME_PROD }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: pip install pymdown-extensions
      - run: pip install mkdocs-encryptcontent-plugin
      - run: pip install jinja2
      - run: python environment.py
      - run: mkdocs gh-deploy --force
